# When we use any defined action of other users it means that the particular action is refered to internet 
# public repositories where that steps of that actions is pre-defined.
name: Actions Workflows

on: [ push, pull_request ]
# TRIGGERING EVENTS 
# 
# 
# Suppose we want to run status checks for only opened or other acitivity types of pull request and on push events
# on:
#   push: #( for push there are no activities thats why it is empty)
#   pull_request:
#     types: [ closed, reopened, assigned, opened ]

# # Suppose we need to schedule the events using cron jobs. Since we are using a schedule event don't use push trigger.
# Cron is a time-based job scheduler
# on:
#   schedule:
#     - cron: "* * * * * "  #cron schedule expression->(minutes hours Day_of_a_month month Day_of_a_week) # "* * * * *" will trigger every time.
#     - cron: "* * * * * " # We can have multiple cron job also.
# https://crontab.guru/ -> evaluate the expression and tell its meaning with examples.
# cron expression examples:
# 1. "1 * * * *" -> This means our workflow will run at minute 1 of every hour of all days( like 12:01,13:01,14:01 etc.)
# 2. "1,2 * * * *" -> This means our workflow will run at minute 1 and 2 of every hour
# 3. "1-10 * * * *" -> This means our workflow will run from minute 1 to 10 of every hour (12:01,12:02,12:03,12:04..12:10)
# 4. "0/15 * * * *" -> This means every 15th of minute of 0-59 minutes. (12:15,12:30,12:45 etc.)
# 5. "20/15 * * * *" -> This means every 15th of minute of starting from 20 minute. (12:20,12:35,12:50 etc.)
# 6. "0 12 * * *" -> This means every day of 12 hour. (Day1 12:00, Day2 12:00, Day3 12:00 etc.) ( As per UTC )
# 7. "0 12 1 * *" -> This means every month of day 1 at 12:00 .
# 8. "0 12 1 1 *" -> This means every year at January month of day 1 at 12:00 . 
#         OR
#    "0 12 1 JAN *" -> This means every year at January month of day 1 at 12:00 .
# 9. "0 12 * 1 0" -> This means every year at January month of sunday at 12:00. (0 -> Sunday 6->Saturday)
#         OR 
#    "0 12 * 1 SUN" -> This means every year at January month of sunday at 12:00. (0 -> Sunday 6->Saturday)




jobs:
  run-github-actions:
    runs-on: ubuntu-latest
    steps:
      - name: simple javascript Actions
        id: greet # STEP-1 ID
        uses: actions/hello-world-javascript-action@v1 
        # It takes reference to the actions which is publish on GitHub public repositories. 
        # Syntax: username/repo-name@version-or-branch e.g actions/hello-world-javascript-action@master
        # We can also reference the actions to a particular commit of a repository
        # e.g actions//hello-world-javascript-action@SHA_ID.
        # It is always recommended to reference a version or SHA ID rather than branch because if any new commit is 
        # added on the branch and if that fails to maintain its characteristic the workflow refering 
        # it may also fail. 
        with:
          who-to-greet: Harsh 
        # If a particular actions requires inputs, we can provide it using 'with' key.
        # What should be the input variable name? refer the readme of that particular action repository.
      
      - name: Get the output of hello-world-javascript-action
        run: echo "${{ steps.greet.outputs.time }}" # refering input step greet
        # Suppose any actions also provides the outputs , and you want that output , one can do it by 
        # providing reference of the input step. outputs is a keyword, time is output-keyword of hello-world-javascript-action output.
        # such defined keyword can be found in readme or in that repository documentation.
        
      # Suppose any application is required to be clone on the runners VM's , so by default github actions
      # won't take clone. We need to explicitly mentioned the cloning part using an offical actions provided by GitHub.
      # The checkout actions can also takes inputs.
      - name: Cloning repositories on runner # Shows the current directory where all clones will occur and list the files.
        uses: actions/checkout@v1
      # Here run is used an another item, not used with keyword 'uses'
      - name: Run Bash command
        run: |
          pwd
          ls -a

      # Provide an example of an input for checkout action is applied for a particular branch.
      - name: Example of an input for checkout action 
        uses: actions/checkout@v3
        with:
          ref: main


      # Environment variables set-up by GitHub automatically
      - name: Environment variables
        run: |
          echo $GITHUB_SHA "This variable gives the commit ID which triggered the workflow"
          echo $GITHUB_REPOSITORY "This variable gives the username and repository name"
          echo $GITHUB_WORKSPACE "This variable gives the pwd directory"
          echo ${{ github.token }} "This variables can be use to authenticate to github repository"

# All actions created by people are found under GitHub marketplace. Some actions are verified by GitHub some are not.
          


      

      